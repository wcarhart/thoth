#!/bin/bash

# thoth - https://en.wikipedia.org/wiki/Thoth
# helpful English diction tools for the command line

self="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
version=0.0.0
description="Helpful English diction tools for the command line"
if [[ -f words.txt ]] ; then words="${self}/words.txt" ; fi
if [[ -f /usr/local/etc/words.txt ]] ; then words=/usr/local/etc/words.txt ; fi

function define {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth define WORD\nDefine the word WORD"
		return
	fi

	if [[ "$words" == "" ]] ; then
		__errortext "thoth: err: could not find dictionary file"
		__errortext "  Use \`install.sh\` to install the dictionary file globally, or"
		__errortext "  run thoth.sh with the words.txt file in the same directory."
		return 1
	fi

	if [[ $# -eq 0 ]] ; then
		__errortext "thoth: what word do you want to define?"
		return 1
	fi

	for term in "$@" ; do
		word="$(echo "$term" | tr a-z A-Z)"
		locations=( "$(grep "^$word$" -n "$words")" )
		if [[ $? -ne 0 ]] ; then
			__errortext "thoth: no dictionary entry for '$term'"
			return 1
		fi
		for location in ${locations[@]} ; do
			line_number="${location%%:*}"
			seen=0

			while read -r line ; do
				if [[ "$line" == "$(echo "$line" | tr a-z A-Z)" && "$line" != "" ]] ; then
					let seen+=1
					if [[ $seen -gt 1 ]] ; then break ; fi
				fi
				echo "$line"
			done < <(tail -n "+$line_number" "$words")
		done
	done
}

function shell {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth shell\n[NOT IMPLEMENTED] Open a new thoth shell to interpret thoth commands"
		return
	fi
	echo "thoth: err: not implemented yet"
	return 1
}

function synonym {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth synonym WORD\n[NOT IMPLEMENTED] Find synonyms for word WORD"
		return
	fi
	echo "thoth: err: not implemented yet"
	return 1
}

function antonym {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth antonym WORD\n[NOT IMPLEMENTED] Find antonyms for word WORD"
		return
	fi
	echo "thoth: err: not implemented yet"
	return 1
}

function example {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth example WORD\n[NOT IMPLEMENTED] Find examples for word WORD"
		return
	fi
	echo "thoth: err: not implemented yet"
	return 1
}

function list {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth list\nList all available commands"
		return
	fi
	__listfunctions
}

function version {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth version\nPrint thoth version"
		return
	fi
	echo "$version"
}

function info {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth info\nPrint info about thoth"
		return
	fi
	cat << EndOfInfo
Name:        thoth
Description: $description
Author:      Will Carhart
Version:     v$version

script file:     ${self}/thoth
dictionary file: $words
synonym file:    TODO
EndOfInfo
}

function help {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth help\nShow this menu and exit"
		return
	fi
	cat << EndOfHelp
$description

Usage:
  thoth COMMAND

Available commands:
$(__listfunctions | sed "s/^/  /")

$( \
	for cmd in `__listfunctions` ; do \
		echo "$(${self}/thoth $cmd --help)" && \
		echo ; \
	done \
)
EndOfHelp
}

# ============ META FUNCTIONS ============ #
function __listfunctions {
	functionlist=( `declare -F | sed -e "s/declare -f //g" -e "s/__.*//g"` )
	for func in "${functionlist[@]}" ; do
		echo "$func"
	done
}

function __helptext {
	echo -e "$@" | fold -w 100 -s
}

function __errortext {
	>&2 echo "$@"
}

# ============ RUN LOGIC ============ #
if declare -F -- "${1:-}" >/dev/null ; then
	"$@"
else
	__errortext "thoth: err: no such command '$1'"
	__errortext "Use 'help' for available commands"
	exit 1
fi
