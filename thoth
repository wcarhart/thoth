#!/bin/bash

# thoth - https://en.wikipedia.org/wiki/Thoth
# helpful English diction tools for the command line

self="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
version=0.0.0
description="Helpful English diction tools for the command line"
if [[ -d dict/ ]] ; then dict="${self}/dict/" ; fi

function define {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth define WORD\nDefine the word WORD."
		return
	fi

	__verify_dict || return 1

	if [[ $# -eq 0 ]] ; then
		__errortext "thoth: what word do you want to define?"
		return 1
	fi

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no definition for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/Examples:.*/d' | \
			sed -e '/^  -.*/d' | \
			sed -e '/Synonyms:.*/d' | \
			sed -e '/Antonyms:.*/d' | \
			sed -e '/Types:.*/d' | \
			sed -e '/Type of:.*/d' | \
			cat -s \
		)"
		if [[ "$output" == "" ]] ; then
			__errortext "thoth: no definition for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function lookup {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth lookup WORD\nGet all information for word WORD."
		return
	fi

	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no lookup record for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			cat -s \
		)"
		if [[ "$output" == "" ]] ; then
			__errortext "thoth: no lookup record for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function shell {
	if [[ $thoth_shell -eq 1 ]] ; then
		__errortext "thoth shell is already running"
		return 1
	fi

	thoth_shell=1
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth shell\nOpen a new thoth shell to interpret thoth commands."
		return
	fi

	prompt=">> "
	while : ; do
		echo -n "$prompt"
		IFS= read key
		if [[ "$key" == "exit"* || "$key" == "quit"* ]] ; then return ; fi
		if [[ `__listfunctions` != *`echo "$key" | cut -d ' ' -f 1`* ]] ; then
			__errortext "Unknown command '`echo $key | cut -d ' ' -f 1`'"
			continue
		fi
		$key
	done
}

function synonym {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth synonym WORD\nFind synonyms for word WORD."
		return
	fi

	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no synonyms for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/(.*).*/d' | \
			sed -e '/Examples:.*/d' | \
			sed -e '/^  -.*/d' | \
			sed -e '/Antonyms:.*/d' | \
			sed -e '/Types:.*/d' | \
			sed -e '/Type of:.*/d' | \
			cat -s \
		)"
		if [[ "$output" != *"Synonyms:"* ]] ; then
			__errortext "thoth: no synonyms for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function antonym {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth antonym WORD\nFind antonyms for word WORD."
		return
	fi

	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no antonyms for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/Examples:.*/d' | \
			sed -e '/^  -.*/d' | \
			sed -e '/(.*).*/d' | \
			sed -e '/Synonyms:.*/d' | \
			sed -e '/Types:.*/d' | \
			sed -e '/Type of:.*/d' | \
			cat -s \
		)"
		if [[ "$output" != *"Antonyms:"* ]] ; then
			__errortext "thoth: no antonyms for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function type {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth type WORD\nFind types for word WORD."
		return
	fi

	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no types for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/Examples:.*/d' | \
			sed -e '/^  -.*/d' | \
			sed -e '/(.*).*/d' | \
			sed -e '/Synonyms:.*/d' | \
			sed -e '/Antonyms:.*/d' | \
			sed -e '/Type of:.*/d' | \
			cat -s \
		)"
		if [[ "$output" != *"Types:"* ]] ; then
			__errortext "thoth: no types for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function typeof {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth typeof WORD\nFind types of for word WORD."
		return
	fi

	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no types of for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/Examples:.*/d' | \
			sed -e '/^  -.*/d' | \
			sed -e '/(.*).*/d' | \
			sed -e '/Synonyms:.*/d' | \
			sed -e '/Antonyms:.*/d' | \
			sed -e '/Types:.*/d' | \
			cat -s \
		)"
		if [[ "$output" != *"Type of:"* ]] ; then
			__errortext "thoth: no types of for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function example {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth example WORD\nFind examples for word WORD."
		return
	fi
	
	__verify_dict || return 1

	exit_code=0
	for term in "$@" ; do
		letter="${term:0:1}"
		if [[ ! -d "${dict}/${letter}" ]] ; then
			__errortext "thoth: no examples of for '$term'"
			exit_code=1
			continue
		fi
		output="$(\
			sed -n -e "/^>>> ${term}$/,/>>>/p" "${dict}/${letter}/words.txt" | \
			sed -e '$d' -e 's/>>> //g' | \
			sed -e '/(.*).*/d' | \
			sed -e '/Synonyms:.*/d' | \
			sed -e '/Antonyms:.*/d' | \
			sed -e '/Types:.*/d' | \
			sed -e '/Type of:.*/d' | \
			cat -s \
		)"
		if [[ "$output" != *"Examples:"* ]] ; then
			__errortext "thoth: no examples of for '$term'"
			exit_code=1
			continue
		else
			echo "$output"
			echo
		fi
	done
	return $exit_code
}

function list {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth list\nList all available commands."
		return
	fi
	__listfunctions
}

function version {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth version\nPrint thoth version."
		return
	fi
	echo "$version"
}

# TODO: implement
function install {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth install DICT\n[NOT IMPLEMENTED] Install a new dictionary DICT to use in place of thoth's default dictionary (the DICT argument needs to be a valid path to a dictionary, where a dictionary is a directory of word records). To view the required dictionary format, please review the currently installed dictionary, which can be viewed with \`thoth info\`."
		return
	fi
	__errortext "thoth: err: not implemented yet"
	return 1
}

# TODO: implement
function add {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth add\n[NOT IMPLEMENTED] Add a new word to the dictionary."
		return
	fi
	__errortext "thoth: err: not implemented yet"
	return 1
}

function info {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth info\nPrint info about thoth."
		return
	fi
	cat << EndOfInfo
Name:        thoth
Description: $description
Author:      Will Carhart
Version:     v$version

script file: ${self}/thoth
dictionary:  ${dict}   
EndOfInfo
}

function help {
	if [[ "$1" == "-h" || "$1" == "--help" ]] ; then
		__helptext ">> thoth help\nShow this menu and exit."
		return
	fi
	cat << EndOfHelp
$description

Usage:
  thoth COMMAND

Available commands:
$(__listfunctions | sed "s/^/  /")

$( \
	for cmd in `__listfunctions` ; do \
		echo "$(${self}/thoth $cmd --help)" && \
		echo ; \
	done \
)
EndOfHelp
}

# ============ META FUNCTIONS ============ #
function __listfunctions {
	functionlist=( `declare -F | sed -e 's/declare -f //g' -e 's/[_-].*//g'` )
	for func in "${functionlist[@]}" ; do
		echo "$func"
	done
}

function __helptext {
	echo -e "$@" | fold -w 100 -s
}

function __errortext {
	>&2 echo "$@"
}

function __verify_dict {
	if [[ "$dict" == "" ]] ; then
		__errortext "thoth: err: could not find a dictionary directory"
		__errortext "  Use \`install.sh\` to install the dictionary globally, or"
		__errortext "  run thoth with the dictionary in the same directory."
		return 1
	fi
}

function --help {
	help "$@"
}

function -h {
	help "$@"
}

# ============ RUN LOGIC ============ #
if declare -F -- "${1:-}" >/dev/null ; then
	"$@"
else
	__errortext "thoth: err: no such command '$1'"
	__errortext "Use 'help' for available commands"
	exit 1
fi
